{"version":3,"sources":["request.js","axios.js","Banner.js","firebase.js","Navbar.js","Row.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchMystery","fetchSciFi","fetchWestern","fetchAnimation","fetchTV","instance","axios","create","baseURL","Banner","str","n","useState","movie","setMovies","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","provider","GoogleAuthProvider","Navbar","handleClick","show","handleShow","image","setImage","window","addEventListener","screenY","removeEventListener","src","alt","onClick","signInWithPopup","then","result","console","log","user","photoURL","catch","error","Row","obj","fetchUrl","isLargeRow","trailerUrl","setTrailerUrl","id","trailerurl","key","map","poster_path","videoId","opts","height","width","playerVars","autoplay","App","setObj","num","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAMA,G,MAAU,oCAgBDC,EAbC,CACZC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,cAAc,4BAAD,OAA8BH,EAA9B,mBACbI,kBAAkB,2BAAD,OAA6BJ,EAA7B,mBACjBK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,mBAAmB,2BAAD,OAA6BP,EAA7B,sBAClBQ,aAAa,2BAAD,OAA6BR,EAA7B,qBACZS,WAAW,2BAAD,OAA6BT,EAA7B,oBACVU,aAAa,2BAAD,OAA6BV,EAA7B,mBACZW,eAAe,2BAAD,OAA6BX,EAA7B,mBACdY,QAAQ,2BAAD,OAA6BZ,EAA7B,uB,+BCRIa,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,iC,eCgDEC,MA/Cf,WAAmB,IAoBDC,EAAIC,EApBJ,EACQC,mBAAS,IADjB,mBACXC,EADW,KACLC,EADK,KAuBd,OArBJC,qBAAU,WAAM,4CAEZ,4BAAAC,EAAA,sEAC0BV,EAAMW,IAAIxB,EAASM,oBAD7C,cACUmB,EADV,OAIIJ,EACII,EAAQC,KAAKC,QACTC,KAAKC,MAAMD,KAAKE,SAAWL,EAAQC,KAAKC,QAAQI,UAN5D,kBASe/B,GATf,4CAFY,uBAAC,WAAD,wBAaZgC,KACD,IAQK,yBACCC,UAAU,SACXC,MAAO,CAACC,eAAe,QACvBC,gBAAgB,sDAAD,cACwBhB,QADxB,IACwBA,OADxB,EACwBA,EAAOiB,cAD/B,MAEfC,mBAAmB,iBALnB,UAOI,sBAAKL,UAAU,iBAAf,UACR,qBAAIA,UAAU,eAAd,eAAoC,OAALb,QAAK,IAALA,OAAA,EAAAA,EAAOmB,SAAP,OAAgBnB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOoB,QAAvB,OAA8BpB,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOqB,eAApE,OAEA,sBAAMR,UAAU,iBAAhB,UACG,wBAAQA,UAAU,gBAAlB,kBACD,wBAAQA,UAAU,gBAAlB,uBAGG,qBAAIA,UAAU,qBAAd,WAnBShB,EAmBmC,OAACG,QAAD,IAACA,OAAD,EAACA,EAAOsB,SAnBvCxB,EAmBiD,KAlBzD,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKc,QAASb,EAAID,EAAI0B,OAAO,EAAGzB,EAAE,GAAI,MAAQD,GAkBhD,UAGD,qBAAKgB,UAAU,2B,wBC1BjBW,G,MAAMC,YAXW,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,kBAMJC,EAAOC,YAAQV,GACfW,EAAW,IAAIC,IC8BbC,MAjDf,YAAgC,IAAfC,EAAc,EAAdA,YAAc,EACFvC,oBAAS,GADP,mBACtBwC,EADsB,KAChBC,EADgB,OAGHzC,mBAAS,gFAHN,mBAGtB0C,EAHsB,KAGfC,EAHe,KA8B7B,OAXAxC,qBAAU,WAMR,OALAyC,OAAOC,iBAAiB,UAAU,WAC5BD,OAAOE,QAAU,IACnBL,GAAW,GACNA,GAAW,MAEb,WACLG,OAAOG,oBAAoB,aAE5B,IAGD,sBAAKjC,UAAS,cAAS0B,GAAQ,aAA/B,UACE,qBACE1B,UAAU,WACVkC,IAAI,4EACJC,IAAI,iBAGN,wBAAQC,QAlCa,WACvBC,YAAgBjB,EAAME,GACnBgB,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAAOG,MACnBb,EAASU,EAAOG,KAAKC,UACrBlB,EAAYc,EAAOG,SAEpBE,OAAM,SAACC,GACNL,QAAQC,IAAII,OA0BqB7C,UAAU,eAA7C,SACE,qBACEA,UAAU,eACVkC,IAAKN,EACLO,IAAI,+B,gBCeCW,MArDf,YAAkD,IAApCC,EAAmC,EAAnCA,IAAKzC,EAA8B,EAA9BA,MAAO0C,EAAuB,EAAvBA,SAASC,EAAc,EAAdA,WAAc,EACjB/D,mBAAS,IADQ,mBACrCC,EADqC,KAC/BC,EAD+B,OAETF,mBAAS,IAFA,mBAEtCgE,EAFsC,KAE1BC,EAF0B,KAUjD9D,qBAAU,WAAM,4CAChB,4BAAAC,EAAA,sEAC0BV,EAAMW,IAAIyD,GADpC,cACUxD,EADV,OAGIJ,EAAUI,EAAQC,KAAKC,SACvBN,EAAUI,EAAQC,KAAKC,SAJ3B,kBAMWF,GANX,4CADgB,uBAAC,WAAD,wBAShBO,KAEG,CAACiD,IACJ,IAAMvB,EAAW,uCAAG,WAAOtC,GAAP,iBAAAG,EAAA,0DACZ4D,EADY,gBAEdC,EAAc,IAFA,sCAISvE,EAAMW,IAAN,iBACXJ,EAAMiE,GADK,qDAJT,OAIVC,EAJU,OAQPF,EAAPJ,EAAoB,UAACM,EAAW5D,KAAKC,QAAQ,UAAzB,aAAC,EAA4B4D,IAAqB,IARxD,2CAAH,sDAYb,OACI,sBAAKtD,UAAU,MAAf,UACI,6BAAKM,IAEL,qBAAKN,UAAU,cAAf,SACKb,EAAMoE,KAAI,SAAApE,GAAK,OAChB,qBACAa,UAAS,qBAAgBiD,GAAc,mBACvCf,IAAG,UA7CF,uCA6CE,OAAgBe,EAAa9D,EAAMqE,YAAarE,EAAMiB,eACzDgC,QAAS,kBAAMX,EAAYtC,IAC3BgD,IAAKhD,EAAMoB,YAId2C,GAAc,cAAC,IAAD,CAASO,QAASP,EAAYQ,KA7CxC,CACTC,OAAQ,MACRC,MAAO,OACPC,WAAY,CACVC,SAAU,UC6BLC,MA5Bf,WAAgB,IAAD,EACS7E,qBADT,mBACN6D,EADM,KACDiB,EADC,KASb,OADAxB,QAAQC,IAAI,cAAcM,GAExB,sBAAK/C,UAAU,MAAf,UACE,cAAC,EAAD,CAAQyB,YARQ,SAAAwC,GAElBD,EAAOC,MAOL,cAAC,EAAD,IACA,yBAAQjE,UAAU,aAAlB,UACE,cAAC,EAAD,CAAK+C,IAAKA,EAAMzC,MAAM,oBAAoB0C,SAAUjF,EAASM,mBAAoB4E,YAAY,IAC7F,cAAC,EAAD,CAAKF,IAAKA,EAAKzC,MAAO,eAAe0C,SAAUjF,EAASC,gBACxD,cAAC,EAAD,CAAK+E,IAAKA,EAAKzC,MAAO,kBAAkB0C,SAAUjF,EAASE,gBAC3D,cAAC,EAAD,CAAK8E,IAAKA,EAAKzC,MAAO,eAAe0C,SAAUjF,EAASI,oBACxD,cAAC,EAAD,CAAK4E,IAAKA,EAAKzC,MAAO,eAAe0C,SAAUjF,EAASK,oBACxD,cAAC,EAAD,CAAK2E,IAAKA,EAAKzC,MAAO,gBAAgB0C,SAAUjF,EAASM,qBACzD,cAAC,EAAD,CAAK0E,IAAKA,EAAKzC,MAAO,eAAe0C,SAAUjF,EAASQ,aACxD,cAAC,EAAD,CAAKwE,IAAKA,EAAKzC,MAAO,iBAAiB0C,SAAUjF,EAASS,eAC1D,cAAC,EAAD,CAAKuE,IAAKA,EAAKzC,MAAO,mBAAmB0C,SAAUjF,EAASU,wBC1BrDyF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.49f83740.chunk.js","sourcesContent":["const API_KEY = \"60cd940dda2f953168a044483b9e7fb9\";\n\n\nconst requests= {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchMystery: `/discover/movie?api_key=${API_KEY}&with_genres=9648`,\n    fetchSciFi: `/discover/movie?api_key=${API_KEY}&with_genres=878`,\n    fetchWestern: `/discover/movie?api_key=${API_KEY}&with_genres=37`,\n    fetchAnimation: `/discover/movie?api_key=${API_KEY}&with_genres=16`,\n    fetchTV: `/discover/movie?api_key=${API_KEY}&with_genres=10770`,\n}\nexport default requests;\n\n\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport default instance;","import React, { useState ,useEffect} from 'react';\nimport requests from './request';\nimport axios from './axios';\nimport './Banner.css';\nfunction Banner() {\nconst [movie,setMovies] = useState([]);\nuseEffect(() => {\n\n    async function fetchData(){\n        const request = await axios.get(requests.fetchRomanceMovies);\n        // console.log(\">---\",request,\"<---\");\n        // console.log(Math.floor(Math.random() * request.data.results.length))\n        setMovies(\n            request.data.results[\n                Math.floor(Math.random() * request.data.results.length)\n            ]\n            );\n            return requests;\n    }\n    fetchData();\n}, []);\n\n// console.log(movie);\n\nfunction truncate(str,n){\n    return str?.length > n ? str.substr(0, n-1)+ \"...\" : str;\n}\n    return (\n        <header\n         className=\"banner\"\n        style={{backgroundSize:\"cover\",\n        backgroundImage:`url(\n        \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n        backgroundPosition:\"center center\",\n        }} >\n            <div className=\"banner_content\">   \n    <h1 className=\"banner_title\"> {movie?.title || movie?.name|| movie?.original_name} </h1>\n\n    < div className=\"banner_buttons\">\n       <button className=\"banner_button\">Play</button>\n      <button className=\"banner_button\">MyList</button>\n         </div>\n         \n         <h1 className=\"banner_description\">{truncate(movie?.overview ,150)} </h1>   \n        \n        </div>\n        <div className=\"banner_fadebottom \"></div>\n        </header>\n    );\n}\n\nexport default Banner;\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\r\n// const provider = new GoogleAuthProvider();\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCqyhjAzmwTzSoPMk8NCkSOps_Gu7eM7_Y\",\r\n  authDomain: \"netflixclone-af56a.firebaseapp.com\",\r\n  projectId: \"netflixclone-af56a\",\r\n  storageBucket: \"netflixclone-af56a.appspot.com\",\r\n  messagingSenderId: \"1077389074595\",\r\n  appId: \"1:1077389074595:web:4aed570b4f13d8629e9f16\",\r\n  measurementId: \"G-YV9VR6HZSR\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\nexport const auth = getAuth(app);\r\nexport const provider = new GoogleAuthProvider();\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./Navbar.css\";\nimport  {signInWithPopup} from \"firebase/auth\";\nimport {auth , provider} from './firebase';\nfunction Navbar({handleClick}) {\n  const [show, handleShow] = useState(false);\n  \n  const [image, setImage] = useState(\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\")\n  const signInWithGoogle = () => {\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        console.log(result.user);\n        setImage(result.user.photoURL)\n        handleClick(result.user);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n//   console.log(props)\n\n\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.screenY > 100) {\n        handleShow(true);\n      } else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n  \n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"img_logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\n        alt=\"netflix logo\"\n      ></img>\n\n      <button onClick={signInWithGoogle} className=\"profile_logo\">\n        <img\n          className=\"profile_logo\"\n          src={image}\n          alt=\"netflix profile logo\"\n        />\n      </button>\n    </div>\n  );\n}\n\nexport default Navbar;\n","\nimport React,{useEffect, useState} from 'react';\nimport axios from './axios';\nimport './Rows.css';\nimport Youtube from 'react-youtube';\nconst base_Url = \"https://image.tmdb.org/t/p/original\";\n// const url = `https://api.themoviedb.org/3/search/movie?api_key=60cd940dda2f953168a044483b9e7fb9&language=en-US&query=${query}&page=1&include_adult=false`;\n        \nfunction Row({obj, title, fetchUrl,isLargeRow }) {\n    const [ movie,setMovies ] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n          autoplay: 1,\n        },\n      };\nuseEffect(() => {\nasync  function fetchData (){\n    const request = await axios.get(fetchUrl);\n    // console.log(request);\n    setMovies(request.data.results);\n    setMovies(request.data.results);\n   \n    return request;\n}\nfetchData();\n\n}, [fetchUrl]);\nconst handleClick = async (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      let trailerurl = await axios.get(\n        `/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\n      );\n      // setTrailerUrl(trailerurl.data.results[0]?.key);\n      obj ?  setTrailerUrl(trailerurl.data.results[0]?.key) : setTrailerUrl(\"\")\n    }\n  };\n// console.log(movie);\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n\n            <div className=\"row_posters\">\n                {movie.map(movie =>(\n                <img \n                className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n                src={`${base_Url}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} \n                onClick={() => handleClick(movie)}\n                alt={movie.name} \n                />\n                ))}\n            </div>\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\n        </div>\n    )\n}\n\nexport default Row;\n","import './App.css';\nimport requests from './request';\nimport Banner from './Banner';\nimport Navbar from './Navbar';\nimport Row from './Row';\nimport {useState} from 'react'\n\n// function Child() {\n//   return (\n//     <div>\n//       <button onClick={event => handleClick(100)}>Click</button>\n//     </div>\n//   );\n// }\n\n\nfunction App() {\n  const [obj, setObj] = useState();\n\n  const handleClick = num => {\n    // 👇️ take parameter passed from Child component\n    setObj(num);\n    // console.log(\"uperr wala\",obj);\n  };\n  console.log(\"niche wala \",obj)\n  return (\n    <div className=\"App\">\n      <Navbar handleClick={handleClick}/>\n      <Banner/>\n      <header className=\"App-header\">\n        <Row obj={obj}  title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchRomanceMovies} isLargeRow={true}/>\n        <Row obj={obj} title= \"Trending now\" fetchUrl={requests.fetchTrending}/>\n        <Row obj={obj} title= \"TopRated Movies\" fetchUrl={requests.fetchTopRated}/>\n        <Row obj={obj} title= \"ComedyMovies\" fetchUrl={requests.fetchComedyMovies}/>\n        <Row obj={obj} title= \"HorrorMovies\" fetchUrl={requests.fetchHorrorMovies}/>\n        <Row obj={obj} title= \"RomanceMovies\" fetchUrl={requests.fetchRomanceMovies}/>\n        <Row obj={obj} title= \"SciFi Movies\" fetchUrl={requests.fetchSciFi}/>\n        <Row obj={obj} title= \"Western Movies\" fetchUrl={requests.fetchWestern}/>\n        <Row obj={obj} title= \"Animation Movies\" fetchUrl={requests.fetchAnimation}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}